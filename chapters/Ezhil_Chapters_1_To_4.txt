1

அனைவருக்கும் வணக்கம்.

தமிழில் கணினி மென்பொருள் நிரல் (Computer Software Program) எழுதக் கற்றுக்கொள்ளவேண்டும் என்கிற ஆர்வத்துடன் இந்த "எழில்" தளத்துக்கு வந்திருக்கிறீர்கள். உங்களுக்கு எங்கள் வாழ்த்துகள்!

"எழில்"பற்றி மேலும் அறியுமுன்னர், நிரல் என்றால் என்ன, அதைக்கொண்டு நாம் என்ன செய்யமுடியும் என்று ஒரு சுருக்கமான அறிமுகத்தைத் தெரிந்துகொள்வது நல்லது.

ஆங்கிலத்தில் ‘கம்ப்யூட்டர்’ எனப்படும் கணினி ஓர் அற்புதமான சாதனம். ஆனால், அதற்குச் சுய அறிவு என்று எதுவும் கிடையாது. மனிதர்களாகிய நாம் சொல்வதைத் திரும்பச் செய்யும், அவ்வளவுதான்.

உங்கள் வீட்டில் ஒரு நாய்க்குட்டி இருப்பதாக வைத்துக்கொள்ளுங்கள். அதனிடம் ‘உட்கார்’ என்று சொன்னால் அது உட்கார்கிறது, ‘நில்’ என்று சொன்னால் அது நிற்கிறது.

இங்கே ‘உட்கார்’, ‘நில்’ என்ற சொற்களை நாம் ‘கட்டளை’ என்று அழைக்கிறோம். நீங்கள் இடுகிற கட்டளைக்கு ஏற்ப அது செயல்படுகிறது. அவ்வளவுதான்.

கணினியும் அப்படிதான், நீங்கள் தரும் கட்டளைக்கு ஏற்ப அது இயங்கும்.

ஒரே பிரச்னை, ‘உட்கார்’, ‘நில்’ போன்ற கட்டளைகள் அதற்குப் புரியாது. தெலுங்கு தெரிந்த ஒருவரிடம் நீங்கள் தமிழைத் தவிர்த்துத் தெலுங்கில் பேசுவதுபோல, கணினிக்குத் தெரிந்த மொழியில் பேசினால்தான் அதற்குப் புரியும்!

கணினிக்கு என்னென்ன மொழிகள் தெரியும்?

ஆங்கிலத்தில் இதற்கு ஏராளமான மொழிகள் உள்ளன. உலகெங்கும் லட்சக்கணக்கானோர் இதனைப் பயன்படுத்திக் கணினிக்குக் கட்டளையிடுகிறார்கள், கணினியும் அதன்படி செயல்படுகிறது.

இந்தக் கட்டளைகளின் தொகுப்புதான், சாஃப்ட்வேர் ப்ரொக்ராம், அல்லது, மென்பொருள் நிரல்.

இப்போது, ஆங்கிலம் அறியாதவர்களும் கணினி நிரல் எழுதக் கற்கவேண்டும் என்ற எண்ணத்துடன், தமிழில் "எழில்" என்ற இந்த மொழி அறிமுகப்படுத்தப்படுகிறது.

என்ன சொல்கிறீர்கள்? தமிழ் என்பதே ஒரு மொழிதானே, அப்படிப் பார்த்தால் "எழில்" என்பது இன்னொரு மொழியாகதானே இருக்கவேண்டும்?

உண்மைதான், தமிழ் என்கிற, உங்களுக்கு ஏற்கெனவே நன்றாகத் தெரிந்த மொழியில் உள்ள அதே சொற்களைப் பயன்படுத்தி உருவாக்கப்பட்ட இன்னொரு மொழிதான் "எழில்". இதை நீங்கள் காகிதத்திலும் எழுதலாம், கணினியிலும் எழுதலாம். அதன்மூலம் கணினியை உங்கள் விருப்பம்போல் இயக்கலாம்.

இந்தச் சிறு கையேட்டில், "எழில்" மொழியைப் பயன்படுத்துவதற்கான நுட்பங்களை உங்களுக்குச் சொல்லித்தரப்போகிறோம். ஒவ்வொரு படியாக முன்னேறி, மிக விரைவில் "எழில்"மூலம் நினைத்ததையெல்லாம் செய்யத் தெரிந்துகொள்ளப்போகிறீர்கள், கணினி உங்களுடைய அடிமையாகக் கை கட்டி நிற்கப்போகிறது.

"எழில்" மொழியைக் கொண்டு நாம் என்னவெல்லாம் செய்யலாம்?

ஏராளமாகச் செய்யலாம். மொத்தத்தையும் இங்கே சொல்வது சாத்தியமில்லை, அவற்றை நீங்களே பயன்படுத்தித் தெரிந்துகொள்வதுதான் நன்றாக இருக்கும். என்றாலும், ஒரு சிறிய பட்டியல் இங்கே:

* நீங்கள் விரும்பும் விஷயங்களைத் திரையில் அச்சிடலாம்
* எளிய, சிக்கலான கணக்குகளைப் போடலாம்
* தர்க்க அடிப்படையிலான (Logical) தீர்மானங்களை எடுக்கலாம்
* படம் வரையலாம்
* ஒரே செயலை நூறு முறை, ஆயிரம் முறை, கோடி முறை திரும்பத் திரும்பச் செய்யலாம்
* முக்கியமாக, இதன்மூலம் கற்றுக்கொண்ட விஷயங்களை அடிப்படையாக வைத்து, மற்ற கணினி மொழிகள், இதைவிடப் பெரிய, பயனுள்ளவற்றைத் தெரிந்துகொள்ளலாம்

உலகெங்கும் கணினி நிரல் எழுதத் தெரிந்தவர்களுக்கு நல்ல வேலை வாய்ப்புகள் உண்டு. ஆனால் அதைவிடப் பெரிய விஷயம், நிரல் எழுதப் பழகுவதன்மூலம் உங்களுக்குத் தர்க்கரீதியிலான சிந்தனை நன்கு பழகும், அது உங்களது படிப்பிலும், மற்ற செயல்பாடுகளிலும் பிரதிபலிக்கும்.

வாருங்கள், "எழில்" உலகத்தினுள் செல்வோம். அது ஒரு பரவசமான பயணம்!

அதற்குமுன்னால், "எழில்" மொழிபற்றிய சில அடிப்படை விஷயங்களைத் தெரிந்துகொண்டுவிடுவது நல்லது.

எழில் என்பது, தமிழில் உருவாக்கப்பட்ட கணினி நிரல் மொழி. மிகவும் எளிமையானது, திறமூலம் (Open Source) அடிப்படையில் வெளியிடப்படுவது.

இதன் நோக்கம், தமிழைத் தாய்மொழியாகக் கொண்ட $மாணவர்கள்$ சுலபமாகக் கணினி நிரல் எழுதக் கற்பிப்பது. இதைக் கொண்டு அவர்கள் தர்க்கரீதியில் சிந்திப்பது, கணக்குகள் போடுவது, கணினியியல் போன்றவற்றை ஆங்கிலத்தின் துணை இன்றியே அறியமுடியும்.

எழில் நிரல் மொழியில், தமிழ்ச் சொற்களும், இலக்கணமும் மிக எளிமையாக அமைக்கப்பட்டுள்ளது. அதேசமயம் மற்ற நவீன கணினி நிரல் மொழிகளில் (ஆங்கிலம் அடிப்படையிலானவை) உள்ள எல்லா வசதிகளும் இதிலும் உண்டு.

பயனுள்ள இந்த எழில் கணினி நிரல் மொழி, இலவசமாகவே வழங்கப்படுகிறது. 2007ம் ஆண்டுமுதல் உருவாகிவரும் இந்த மொழி, 2009ம் ஆண்டு முறைப்படி வெளியானது.

எழில் மொழியில் நிரல் எழுதுவதற்கான வழிமுறைகள், கிட்டத்தட்ட BASIC கணினி மொழியைப்போலவே அமைந்திருக்கும். நீங்கள் எழுதும் நிரல்கள் ஒன்றபின் ஒன்று என்ற வரிசையில் இயக்கப்படும். அல்லது, Functions எனப்படும் $‘நிரல் பாக’ங்களை$ நீங்கள் பயன்படுத்தலாம்.

இந்த மொழியில் எண்கள், எழுத்துச் சரங்கள், தர்க்கக் குறியீடுகள், பட்டியல்கள் போன்ற வகைகள் உண்டு. நீங்கள் பயன்படுத்தும் மாறி(Variable)களைத் தனியே அறிவிக்க(Declaration)த் தேவையில்லை. நேரடியாக நிரலில் பயன்படுத்தத் தொடங்கலாம்.

அதேசமயம், ஒரு வகை மாறியை இன்னொரு வகை மாறியாக மாற்றுவது என்றால், அதற்கு உரிய குறிச்சொற்களைப் பயன்படுத்தவேண்டும்.

எழில் மொழியின் நோக்கங்கள்:

* கல்வி : ஒன்றாம் வகுப்பு முதல் 12ம் வகுப்புவரை பயிலும் $மாணவர்கள்$ இதனைப் பயன்படுத்தி அடிப்படைக் கணினியியல், நிரல் எழுதுதல்பற்றி அறியலாம்
* இயல்பானது : எழில் மொழியின் இலக்கணம், தமிழின் எழுத்து இலக்கணத்தை ஒட்டியே அமைக்கப்பட்டுள்ளது. ஆகவே, தமிழில் பேசுகிற, எழுதுகிற எவரும் இதனைச் சுலபமாக அறிந்துகொண்டு பின்பற்றலாம்
* $FIRSTLANG then transfer$

இதில் உள்ள வசதிகள்:

* கணிதம் மற்றூம் தர்க்கரீதியிலான குறியீடுகள்
* முந்நூற்றைம்பதுக்கும் மேற்பட்ட நிரல் $libraryfcns$ பாகங்கள் இதில் ஏற்கெனவே சேர்க்கப்பட்டுள்ளன
* இவைதவிர, நீங்களே புதிய நிரல் பாகங்களை எழுதிச் சேர்க்கலாம்
* Notepad++ மற்றும் Emacs பயன்படுத்துகிறவர்கள், தங்களது நிரல்களுக்கு ஏற்ற வண்ணக் குறியீடுகளை அமைத்துக்கொள்ளும் வசதி எழில் மொழியில் உண்டு

குறிச்சொற்கள்:

எழில் மொழியில் நிரல் எழுதுவதற்கு ஏராளமான குறிச் சொற்கள் உள்ளன. இவற்றை நாம் அடுத்தடுத்த அத்தியாயங்களில் விளக்கமாகப் பார்க்கவிருக்கிறோம்.

இப்போதைக்கு, எழில் மொழியில் உள்ள முக்கியமான குறிச் சொற்களின் பட்டியலையும், அதற்கு இணையான ஆங்கிலச் சொற்களையும் இங்கே பார்த்துவிடுவோம்:

* ஆக : for
*  நிறுத்து : break
* தொடர் : continue
* பின்கொடு : return
* ஆனால் : if
* இல்லைஆனால் : elseif
* இல்லை : else
* தேர்ந்தெடு : select
* தேர்வு : case
* ஏதேனில் : otherwise
* வரை: while
* செய் : do
* முடியேனில் : until
* பதிப்பி : print
* நிரல்பாகம்  : function
* முடி : end

2

இப்போது, "எழில்" மொழியைக் கொண்டு தமிழிலேயே கணினி நிரல், அதாவது Software Program எப்படி எழுதுவது என்று கற்றுக்கொள்வோம்.

அதற்குமுன்னால், நீங்கள் ஏற்கெனவே "எழில்" மொழியைப் பயன்படுத்துவதற்கான மென்பொருளை (Software) இணையத்திலிருந்து பதிவிறக்கம் செய்துவிட்டீர்கள் (Downloaded), உங்கள் கணினியில் அதை நிறுவிவிட்டீர்கள் (Installed) என நம்புகிறேன். ஒருவேளை நீங்கள் அதைச் செய்யவில்லை என்றால், உடனடியாக http://ezhillang.org/ என்ற இணைய தளத்துக்குச் செல்லுங்கள், அங்கே தரப்பட்டுள்ள உதவிக் குறிப்புகளின் அடிப்படையில் உங்கள் கணினியை "எழில்" மயமாக்குங்கள்!

அடுத்து, நாம் நிரல் எழுதத் தொடங்கவேண்டும். ஆனால், எங்கே?

இதற்கு நாம் $Interpreter$ என்ற பகுதியைத் தொடங்கவேண்டும். அதாவது, உங்களது நிரலை வாசித்து, அதைச் செயல்படுத்தி விடைகளைத் திரையில் காட்டுகிற பகுதி. நம் வசதிக்காக, இதனை "நிரல் மேசை" என அழைப்போம்!

உங்களது எழில் கணினித் திரையில் "ez" என்று தட்டச்சு செய்யுங்கள். விசைப்பலகையில் உள்ள "Enter" விசையைத் தட்டுங்கள்.

உடனே, உங்கள் திரையில் Interpreter, அதாவது நிரல் மேசை தோன்றும். இதில்தான் நாம் நம்முடைய நிரல்களை எழுதப்போகிறோம்***

இப்போது, ஒரு மிக எளிய நிரல் எழுதுவோம். இதன் பெயர், ‘வணக்கம்’.

அதாவது, உங்கள் கணினி உங்களுக்கு வணக்கம் சொல்லப்போகிறது. அதற்கு நீங்கள் பிறப்பிக்கவேண்டிய கட்டளை இது:

*************************************
பதிப்பி "வணக்கம் தமிழகம்!"
*************************************

இந்தக் கட்டளையை நீங்கள் தட்டச்சு செய்து, "Enter" என்ற விசையைத் தட்டுங்கள்.

மறுவிநாடி, உங்கள் திரையில் "வணக்கம் தமிழகம்!" என்ற எழுத்துகள் தோன்றும்.

வாழ்த்துகள்! நீங்கள் உங்களுடைய முதல் நிரலை எழுதிவிட்டீர்கள்!

இது மிக எளிமையான நிரல்தான். இன்னும் சிக்கலான, பயனுள்ள பல செயல்களைச் செய்யக்கூடிய நிரல்களை அடுத்தடுத்து எழுதப்போகிறீர்கள்.

அதற்குமுன்னால், நாம் தொடங்கிய நிரல் மேசையை எப்படி மூடிவைப்பது என்று தெரிந்துகொள்ளவேண்டும். அதற்கு நீங்கள் பயன்படுத்தவேண்டிய கட்டளைச் சொல் exit()

இதைத் தட்டச்சு செய்து "Enter" பொத்தானை அழுத்தியதும், நிரல் மேசைத் திரை காணாமல் போய்விடும்.

பிறகு, நமக்கு வேண்டியபோது ez என்று தட்டச்சு செய்து மீண்டும் "Enter" பொத்தானை அழுத்தினால் போதும், மீண்டும் நிரல் மேசை தோன்றும், அடுத்த நிரலை எழுதத் தொடங்கலாம்.

இப்போது, "எழில்" மொழியைப் பயன்படுத்திச் சில எளிய கணக்குகளைப் போடுவோம்.

முதலில், நாம் ஏற்கெனவே பார்த்த முறைப்படி உங்கள் நிரல் மேசையைத் திறந்துகொள்ளுங்கள். அதில் கீழே உள்ள வரியைத் தட்டச்சு செய்து "Enter" பொத்தானை அழுத்துங்கள்

*************************************
பதிப்பி 10+15
*************************************

இப்போது உங்கள் திரையில் 25 என்ற எண் தோன்றும். அதாவது, 10, 15 ஆகியவற்றின் கூட்டுத் தொகை.

இதேபோல், நாம் கழித்தல், பெருக்கல், வகுத்தல் ஆகியவற்றையும் செய்யலாம். இப்படி:

*************************************
பதிப்பி 30-5
பதிப்பி 5*5
பதிப்பி 25/5
*************************************

இன்னும் கொஞ்சம் பெரிய கணக்கு, இருபத்தைந்தின் அடுக்கு இரண்டு, அதாவது 25 * 25 எப்படிக் கணக்கிடுவீர்கள்? இதோ, இப்படிதான்:

*************************************
பதிப்பி 25^2
*************************************

இந்தக் கணக்குகளை நாம் தனித்தனியே போடவேண்டும் என்று அவசியம் இல்லை, பலவற்றைத் தொகுத்து ஒரே வரியில்கூட எழுதலாம். இப்படி:

*************************************
பதிப்பி (((5+(25^2))/6)^2)
*************************************

இங்கே நீங்கள் அடைப்புக்குறி தந்துள்ள வரிசைப்படி "எழில்" ஒவ்வொரு கணக்காகப் போடும், நிறைவாக சரியான விடையைச் சொல்லிவிடும்.

உங்களுடைய கணக்கு வகுப்பில் "பை" என்ற முக்கியமான எண்ணைப்பற்றிப் படித்திருப்பீர்கள். 3.14 என்று தொடங்கும் அந்தப் பயனுள்ள எண்ணை உங்களது "எழில்" கணக்குகளில் பயன்படுத்தவேண்டுமானால், இப்படி எழுதவேண்டும்:

*************************************
பதிப்பி  pi()
*************************************

இதேபோல், Sin, Cos, Tan, Log போன்றவற்றையும் "எழில்" கணக்குகளில் கொண்டுவரலாம். These trigonometric functions need input in radians.
இப்படி:

*************************************
radian = pi()/180
பதிப்பி Sin(30*radian)
பதிப்பி Tan(60*radian)
பதிப்பி Log(100*radian)
*************************************

ஆனால், இவையெல்லாம் நாமே தட்டச்சு செய்கிற கணக்குகள். கொஞ்சம் வித்தியாசமாக, நாம் கேட்கிற கணக்குகளைக் கணினியே போட்டுப் பதில் தரும்படி மாற்றமுடியாதா?

நிச்சயமாகச் செய்யலாம், அதுதான் நம்முடைய அடுத்த பணி!

இதுவரை, நாம் தட்டச்சு செய்த விஷயங்களை "எழில்" மொழி அப்படியே நிறைவேற்றிக்கொண்டிருந்தது. இப்போது, அது கேட்கும் கேள்விக்கு நாம் பதில் சொல்லப்போகிறோம்.

இதற்கு நாம் "உள்ளீடு" என்ற கட்டளையைப் பயன்படுத்தவேண்டும். இதுபோல:

*************************************
முதல்எண் = எண்_உள்ளீடு("ஓர் எண்ணைச் சொல்லுங்கள்: ")
*************************************

இந்தக் கட்டளையை நிறைவேற்றினால், உங்கள் கணினித் திரையில் "ஓர் எண்ணைச் சொல்லுங்கள்: " என்ற எழுத்துகள் தோன்றும். நீங்கள் ஏதாவது ஓர் எண்ணைத் தட்டச்சு செய்து "Enter" பொத்தானை அழுத்தவேண்டும்.

உடனே, நீங்கள் தட்டச்சு செய்த எண் கணினியால் பெறப்பட்டு, "முதல்எண்" என்ற பெயரில் சேமிக்கப்பட்டுவிடும்.

இப்போது, இரண்டாவதாக இன்னோர் எண்ணையும் உள்ளீடு செய்வோம். இப்படி:

*************************************
இரண்டாம்எண் = எண்_உள்ளீடு("இன்னோர் எண்ணைச் சொல்லுங்கள்: ")
*************************************

இந்தக் கட்டளை நிறைவேறியதும், நீங்கள் இன்னோர் எண்ணைத் தட்டச்சு செய்யவேண்டும். அது "இரண்டாம்எண்" என்ற பெயரில் சேமிக்கப்பட்டுவிடும்.

இப்போது, இந்த இரண்டு எண்களையும் கூட்டி, "மூன்றாம்எண்" என்ற பெயரில் சேமிப்போம். இது உங்களுக்கு ஏற்கெனவே நன்றாகத் தெரிந்த விஷயம்தானே:

*************************************
மூன்றாம்எண் = முதல்எண் + இரண்டாம்எண்
*************************************

நிறைவாக, இந்த விடையை அச்சிடுவோம், இதோ இப்படி:

*************************************
பதிப்பி "நீங்கள் தந்த எண்களின் கூட்டுத் தொகை: ", மூன்றாம்எண்
*************************************

அவ்வளவுதான். இப்போது, இந்த நிரலை இயக்கிப் பார்ப்போம்.

See : simple_add.n
*************************************
ஓர் எண்ணைச் சொல்லுங்கள்: 6
இன்னோர் எண்ணைச் சொல்லுங்கள்: 7
நீங்கள் தந்த எண்களின் கூட்டுத் தொகை: , 13
*************************************
ஓர் எண்ணைச் சொல்லுங்கள்: 10
இன்னோர் எண்ணைச் சொல்லுங்கள்: 5
நீங்கள் தந்த எண்களின் கூட்டுத் தொகை: , 15
*************************************

அருமை! "எழில்" மொழியைப் பயன்படுத்தி ஓர் உபயோகமான நிரல் எழுதிவிட்டீர்கள்!

இப்போது, உங்களுக்கு ஒரு பயிற்சி.

ஒரு கடையில் மக்கள் வந்து காய்கறி, பழம், ரொட்டி வாங்கிச் செல்கிறார்கள். இவற்றின் விலைகளை நீங்கள் தனித்தனியே பெற்று, மொத்தக் கூட்டுத் தொகை எவ்வளவு என்று சொல்லவேண்டும். பின்னர், அவர்கள் தரும் தொகை எவ்வளவு என்று பார்த்து, மீதி சில்லறை எவ்வளவு என்றும் சொல்லவேண்டும்.

இதுவரை நீங்கள் கற்றுக்கொண்ட விஷயங்களை வைத்து அதற்கு ஒரு நிரல் எழுதுங்கள் பார்க்கலாம்!

விடை:

*************************************
காய்கறி = உள்ளீடு("காய்கறி வாங்கிய தொகை எவ்வளவு? ")
பழம் = உள்ளீடு("பழம் வாங்கிய தொகை எவ்வளவு? ")
ரொட்டி = உள்ளீடு("ரொட்டி வாங்கிய தொகை எவ்வளவு? ")

மொத்தத்தொகை = காய்கறி + பழம் + ரொட்டி

பதிப்பி "நீங்கள் தரவேண்டிய ரூபாய் ", மொத்தத்தொகை

தரும்தொகை = உள்ளீடு("நீங்கள் தரும் தொகை எவ்வளவு? ")

மீதித்தொகை = தரும்தொகை - மொத்தத்தொகை

பதிப்பி "நன்றி. மீதி சில்லறையைப் பெற்றுக்கொள்ளுங்கள்: ரூபாய் ", மீதித்தொகை
*************************************
$teaser how to extend this to any number of items using loops$

3

சென்ற $lesson/chapter?அத்தியாயத்தில்$ "எழில்" மொழியைப் பயன்படுத்தி எண்களோடு விளையாடினோம், இப்போது எழுத்துகள், வார்த்தைகள், வாக்கியங்களுடன் விளையாடப் பழகுவோம்.

"க" என்பது ஒரு தனி எழுத்து, "ல்" என்பது இன்னொரு தனி எழுத்து, அவை சேர்ந்து "கல்" என்ற வார்த்தை உருவாகிறது. இப்படிப் பல வார்த்தைகள் சேர்ந்து ஒரு வாக்கியமாகும், இப்படி: "கல்லும் மண்ணும் சேர்ந்து கட்டிய வீடு."

இவை அனைத்தையும் நாம் "சரங்கள்" என்று அழைக்கலாம். ஒரு சரம் என்பது தனி எழுத்தாகவோ, வார்த்தையாகவோ, வாக்கியமாகவோ இருக்கலாம்.

உதாரணமாக, "நீ" என்பது ஒரு சரம், "நீர்" என்பது இன்னொரு சரம், "நீர் தருகிறேன்" என்பது இன்னொரு சரம். இப்படி சொல்லிக்கொண்டே போகலாம்.

எழில் மொழியில், இந்தச் சரங்களை வைத்து என்னவெல்லாம் செய்யமுடியும்?

முதலில், ஒரு சரத்தின் நீளத்தைக் கண்டுபிடிப்போம். அதற்கு ஓர் எளிய நிரல் எழுதுவோம்.

*************************************
அ = உள்ளீடு("உங்களுக்குப் பிடித்த ஏதாவது ஓர் எழுத்துச் சரத்தைத் தாருங்கள்: ")

பதிப்பி "நீங்கள் தந்த சரம்: ", அ
பதிப்பி "அந்தச் சரத்தின் நீளம்: ", நீளம்(அ)
*************************************

இந்த நிரலை மேலோட்டமாகப் படித்தாலே உங்களுக்கு நன்றாகப் புரியும். நீங்கள் தரப்போகும் கணினியை "எழில்" மொழி வாங்கி, "அ" என்ற பெயரில் சேமிக்கிறது, பின்னர் அதன் நீளத்தைக் கணக்கிட்டு அச்சிடுகிறது.

இப்போது, நாம் எழுதிய நிரலை இயக்கிப் பார்ப்போம்:

*************************************
உங்களுக்குப் பிடித்த ஏதாவது ஓர் எழுத்துச் சரத்தைத் தாருங்கள்: என் பெயர் எழில்
நீங்கள் தந்த சரம்: என் பெயர் எழில்
அந்தச் சரத்தின் நீளம்: 10
*************************************

அடுத்து, இரண்டு எழுத்துச் சரங்களை ஒட்டவைப்பது எப்படி என்று பார்க்கலாம்.

இதற்கு, நீங்கள் எண்களைக் கூட்டுவதற்குப் பயன்படுத்திய "+" என்ற குறியீட்டைப் பயன்படுத்தலாம். இதோ இப்படி:

*************************************
அ = "தமிழ்"
ஆ = "அமுது"
இ = அ + ஆ

பதிப்பி அ
பதிப்பி ஆ
பதிப்பி இ
*************************************

இந்த நிரல், "தமிழ்" மற்றும் "அமுது" என்ற இரு எழுத்துச் சரங்களை ஒட்டவைத்துக் காண்பிக்கிறது. அதனை இயக்கினால், "தமிழ்அமுது" என்று அச்சிடும்.

இப்போது, உங்களுக்கு ஒரு பயிற்சி, "தமிழ்அமுது" என்ற சொல் பார்ப்பதற்கு நன்றாக இல்லையே, இந்த நிரலைக் கொஞ்சம் மாற்றி, இரு சொற்களுக்கும் நடுவில் ஓர் இடைவெளி விட்டு "தமிழ் அமுது" என்று அச்சிடும்படி செய்யுங்கள், பார்க்கலாம்!

விடை:

*************************************
அ = "தமிழ்"
ஆ = " "
இ = "அமுது"
ஈ = அ + ஆ + இ

பதிப்பி ஈ
*************************************

அடுத்த பயிற்சி. இதுவரை நீங்கள் கற்றுக்கொண்ட விஷயங்களையெல்லாம் வைத்து, கீழே தரப்பட்டுள்ள தேவைக்கேற்ப ஒரு நிரல் எழுதுங்கள்:

	* உங்கள் கணினி இரண்டு எழுத்துச் சரங்களைக் கேட்டுப் பெறவேண்டும்
	* அந்த இரண்டையும் ஒட்டவைத்து மூன்றாவதாக ஒரு சரத்தை உருவாக்கவேண்டும்
	* இந்த மூன்றாவது சரத்தின் நீளத்தைத் திரையில் அச்சிடவேண்டும்

விடை:

*************************************
முதல்சரம் = உள்ளீடு("ஒரு வாக்கியம் சொல்லுங்கள்: ")
இரண்டாம்சரம் = உள்ளீடு("இன்னொரு வாக்கியம் சொல்லுங்கள்: ")

மூன்றாம்சரம் = முதல்சரம் + இரண்டாம்சரம்

பதிப்பி "நீங்கள் தந்த இரு சரங்களில் மொத்தம் ", நீளம்(மூன்றாம்சரம்), " எழுத்துகள் உள்ளன!"
*************************************

அடுத்து, ஒரு ஜாலியான விளையாட்டு, ஒரு சரத்துக்குள் நாம் விரும்புகிற எழுத்துகள் எங்கே இருக்கின்றன என்று கொஞ்சம் தேடிக் கண்டுபிடிக்கலாமா?

இதற்கு, "சரம்_கண்டுபிடி" என்ற கட்டளை வார்த்தையைப் பயன்படுத்தவேண்டும். இதோ இப்படி:

*************************************
முக்கனிகள் = "மா, பலா, வாழை"

பதிப்பி "முக்கனிகள் : ", முக்கனிகள்
பதிப்பி சரம்_கண்டுபிடி(முக்கனிகள், "வாழை")
பதிப்பி சரம்_கண்டுபிடி(முக்கனிகள், "தேங்காய்")
*************************************

மா, பலா, வாழை என்ற முக்கனிகளில், வாழை உள்ளது, ஆனால், தேங்காய் இல்லை. இதை "சரம்_கண்டுபிடி" கட்டளை உங்களுக்குக் கண்டறிந்து சொல்லிவிடும்.

அடுத்து, முக்கனிகளைக் கொஞ்சம் மாற்றம் செய்வோமா? எனக்கு வாழை பிடிக்காது, அதற்குப் பதிலாகக் கொய்யாவைச் சேர்த்து விளையாடுவோம். இதோ இப்படி:

*************************************
முக்கனிகள் = "மா, பலா, வாழை"

பதிப்பி "பழைய முக்கனிகள் : ", முக்கனிகள்

முக்கனிகள் = சரம்_இடமாற்று(முக்கனிகள், "வாழை", "கொய்யா")

பதிப்பி "புதிய முக்கனிகள் : ", முக்கனிகள்
*************************************

இங்கே "சரம்_இடமாற்று" என்ற கட்டளை "வாழை"யைத் தூக்கி எறிந்துவிட்டு, அந்த இடத்தில் "கொய்யா"வை உள்ளே நுழைத்துவிட்டது. இதனை இயக்கினால், கீழ்க்காணும் விடை கிடைக்கும்:

*************************************
பழைய முக்கனிகள் : மா, பலா, வாழை
புதிய முக்கனிகள் : மா, பலா, கொய்யா
*************************************

$சரம்_தலைகீழ்$

இப்படி ஒவ்வொரு பழமாகப் பார்த்துப் பார்த்து மாற்றிக்கொண்டிருப்பது சிரமம். இதையே இன்னும் சுலபமாகச் செய்ய ஏதேனும் வழி உண்டா?

அதற்கு நீங்கள் "பட்டியல்" என்ற கட்டளையைப் பயன்படுத்தவேண்டும்.

வகுப்பில் உங்கள் ஆசிரியர் சொல்லும் விஷயங்களை ஒன்றன்கீழ் ஒன்றாகப் பட்டியல் போடுகிறீர்கள் அல்லவா? அதுபோல, பழங்களை வரிசையாக அடுக்கிவைக்கப் பட்டியலைப் பயன்படுத்தலாம்.

முதலில், ஒரு காலிப் பட்டியலைத் தயாரிப்போம். இதோ, இப்படி:

*************************************
பழங்கள் = பட்டியல்()
*************************************

அடுத்து, இந்தப் பட்டியலில் பழங்களைச் சேர்ப்போம், அதற்கு "பின்இணை" என்ற கட்டளையைப் பயன்படுத்தவேண்டும்:

*************************************
பின்இணை(பழங்கள், "மா")
பின்இணை(பழங்கள், "பலா")
பின்இணை(பழங்கள், "வாழை")
பின்இணை(பழங்கள், "கொய்யா")
பின்இணை(பழங்கள், "ஆப்பிள்")
*************************************

ஆக, இப்போது நம் பட்டியலில் ஐந்து பழங்கள் உள்ளன. அவற்றுக்குத் தனித்தனியே எண்கள் தருவோமா?

ஒரு விஷயம், பட்டியலின் எண்கள் 1, 2, 3 என அமையாது, பூஜ்ஜியத்திலிருந்து தொடங்கும், அதாவது, 0, 1, 2... இப்படி.

0 மா
1 பலா
2 வாழை
3 கொய்யா
4 ஆப்பிள்

இப்போது, நாம் ஒரு குறிப்பிட்ட பழத்தை அச்சிடவேண்டுமென்றால், "எடு" என்ற கட்டளையைப் பயன்படுத்தவேண்டும். உதாரணமாக, இந்த வரியைப் பாருங்கள்:

*************************************
எடு(பழங்கள், 1)
*************************************

இந்த நிரல் இயங்கினால், "பலா" என்று அச்சிடும். காரணம், அந்தப் பட்டியலில் 1 என்ற எண்ணுக்கு நேராக அந்தப் பழம்தான் பதிவாகியுள்ளது.

அடுத்தபடியாக, இந்தப் பட்டியலில் உள்ள பழங்களை அகர வரிசைப்படி அடுக்குவோமா? அதற்கு நாம் "வரிசைப்படுத்து" என்ற கட்டளையைப் பயன்படுத்தவேண்டும். இதோ, இப்படி:

*************************************
வரிசைப்படுத்து(பழங்கள்)
*************************************

இந்தக் கட்டளை, பழங்களை அகர வரிசைப்படி மாற்றும். அதாவது, முதலில் ஆப்பிள், அடுத்து கொய்யா, பலா, மா, அதன்பிறகு வாழை.

இப்போது, உங்களுக்கு ஒரு பயிற்சி, மூன்று நண்பர்களுடைய பெயரைப் பட்டியலில் சேர்த்து, அகர வரிசைப்படி அவர்கள் ஒவ்வொருவருக்கும் வணக்கம் சொல்லி அச்சிடுங்கள். உதாரணமாக, வணக்கம் கணேஷ், வணக்கம் ரமேஷ்... இப்படி.

விடை:

*************************************
நண்பர்கள் = பட்டியல்()

பின்இணை(நண்பர்கள், "கணேஷ்")
பின்இணை(நண்பர்கள், "ரமேஷ்")
பின்இணை(நண்பர்கள், "மகேஷ்")

வரிசைப்படுத்து(நண்பர்கள்)

அ = "வணக்கம் "

பதிப்பி அ + எடு(நண்பர்கள், 0)
பதிப்பி அ + எடு(நண்பர்கள், 1)
பதிப்பி அ + எடு(நண்பர்கள், 2)
*************************************

4

இதுவரை, நாம் எழுதிய நிரல் வகைகள் அனைத்தும், நேர் கோட்டில் செல்பவை. அதாவது, ஒரு வரிக்குப்பிறகு அடுத்த வரி, பின்னர் இன்னொரு வரி... இப்படி.

அவ்வாறில்லாமல், சில காரணிகளுக்கேற்ப ஒரே நிரலை வெவ்வேறுவிதமாக மாறி இயங்கச் செய்ய முடியுமா?

தாராளமாகச் செய்யலாம், இதற்கு நாம் தர்க்கக் குறியீடுகளைப் பயன்படுத்தவேண்டும்.

உதாரணமாக, நீங்கள் வீட்டுப்பாடம் எழுதி முடித்தால், விளையாடச் செல்லலாம் என்று உங்கள் தாய் கூறுகிறார். இதனைத் தர்க்கக் குறியீடுகளின்படி எப்படி எழுதுவது?

	* வீட்டுப்பாடம் எழுதி முடித்துவிட்டாயா?
	* ஆம் எனில் ... விளையாடலாம்
	* இல்லை எனில் ... விளையாடக்கூடாது

இதே விஷயத்தை "எழில்" மொழியில் ஒரு நிரலாக எழுதிப் பார்ப்போமா? இதோ, இப்படி:

*************************************
அ = உள்ளீடு("வீட்டுப்பாடம் எழுதிவிட்டாயா? ")

@(அ == "ஆமாம்") ஆனால்
	பதிப்பி "விளையாடச் செல்லலாம்"
இல்லை
	பதிப்பி "வீட்டுப்பாடம் எழுதியபிறகுதான் விளையாடவேண்டும்!"
முடி
*************************************

இங்கே நாம் பயன்படுத்தியிருக்கும் தர்க்கக் குறியீடு, இப்படி அமைகிறது:

	* முதலில் "@" என்ற சிறப்பு எழுத்து
	* அடுத்து, அடைப்புக்குறிக்குள் நாம் ஒப்பிடவிரும்பும் விஷயம் (அ = "ஆமாம்")
	* அடுத்து, "ஆனால்" என்கிற சொல்
	* அடுத்த வரியில், அந்த ஒப்பீடு உண்மை எனில், நாம் செய்ய விரும்பும் செயல், இங்கே நாம் ஒன்று அல்லது அதற்கு மேற்பட்ட செயல்களை வெவ்வேறு வரிகளில் தரலாம்
	* அடுத்து "இல்லை" என்கிற சொல்
	* அடுத்த வரியில், அந்த ஒப்பீடு பொய் எனில், நாம் செய்ய விரும்பும் செயல், இங்கேயும் நாம் ஒன்று அல்லது அதற்கு மேற்பட்ட செயல்களை வெவ்வேறு வரிகளில் தரலாம்
	* நிறைவாக "முடி" என்கிற சொல், நாம் செய்யும் தர்க்கரீதியிலான பணிகளை நிறைவு செய்கிறது

இதைப் புரிந்துகொள்வதற்கு, இன்னோர் எளிய உதாரணம் பார்ப்போம்:

*************************************
வயது = உள்ளீடு("உங்கள் வயது என்ன? ")

@(வயது > 18) ஆனால்
	பதிப்பி "நீங்கள் தேர்தலில் வாக்களிக்கலாம்"
	பதிப்பி "நீங்கள் வாகனம் ஓட்டலாம்"
இல்லை
	பதிப்பி "நீங்கள் தேர்தலில் வாக்களிக்க இயலாது"
	பதிப்பி "நீங்கள் வாகனம் ஓட்ட இயலாது"
முடி
*************************************

இதையே கொஞ்சம் விரிவுபடுத்தி, ஒரு சிறிய விநாடி வினா நிகழ்ச்சி நடத்துவோமா?

*************************************
பதிப்பி "இந்தியாவின் தலைநகரம் எது?"
பதிப்பி "அ. சென்னை"
பதிப்பி "ஆ. மதுரை"
பதிப்பி "இ. டெல்லி"
பதிப்பி "ஈ. மும்பை"

சரியானவிடை = "இ"
உங்கள்விடை = உள்ளீடு("உங்களுடைய பதில் என்ன? ")

@(சரியானவிடை == உங்கள்விடை) ஆனால்
	பதிப்பி "வாழ்த்துகள். உங்களுக்கு 10 மதிப்பெண்கள்!"
இல்லை
	பதிப்பி "தவறான விடை. மீண்டும் முயற்சி செய்யுங்கள்!"
முடி
*************************************

சில நேரங்களில், ஒரு தர்க்க ஒப்பீட்டுக்குள் இன்னொரு தர்க்க ஒப்பீடும் வரலாம், அப்போது @, ஆனால், இல்லை, முடி ஆகிய நான்கு சொற்களையும் முழுமையாக, அடுத்தடுத்து வரும் ஒரே தொகுப்பாக (Block) ஒன்றுக்குள் இன்னொன்றை அமைத்துப் பயன்படுத்தவேண்டும். கிட்டத்தட்ட உங்கள் கணிதப் பாடத்தில் வரும் அடைப்புக்குறிகளைப்போல என்று வைத்துக்கொள்ளுங்களேன்!

உதாரணமாக, இந்த நிரலைப் பாருங்கள்:

*************************************
அ = உள்ளீடு("ஓர் எண்ணைச் சொல்லுங்கள் ")
ஆ = உள்ளீடு("இன்னோர் எண்ணைச் சொல்லுங்கள் ")

@(அ == ஆ) ஆனால்
	பதிப்பி "இரு எண்களும் சமம்!"
இல்லை
	@(அ > ஆ) ஆனால்
		பதிப்பி "முதல் எண் பெரியது!"	
	இல்லை
		பதிப்பி "இரண்டாம் எண் பெரியது!"
	முடி
முடி
*************************************

இதுவரை நாம் பார்த்த நிரல்களோடு ஒப்பிடுகையில், இது கொஞ்சம் பெரியதாக உள்ளது. பின்னர் இன்னொருநாள் வேறொருவரோ (அல்லது நாமேகூட) இதனைப் படித்தால் நமக்குப் புரியுமோ, புரியாதோ!

ஆகவே, நிரல் எழுதும்போதே, அதற்கான விளக்கங்களையும் ஆங்காங்கே எழுதிவிடுவது நல்லது. இதற்கு நீங்கள் "##" என்ற சின்னத்தைப் பயன்படுத்தவேண்டும். இதோ இப்படி:

*************************************
## இந்த நிரலை எழுதியவர்: சந்திரசேகரன்

## முதல் எண்ணை உள்ளிடுதல்

அ = உள்ளீடு("ஓர் எண்ணைச் சொல்லுங்கள் ")

## இரண்டாவது எண்ணை உள்ளிடுதல்

ஆ = உள்ளீடு("இன்னோர் எண்ணைச் சொல்லுங்கள் ")

## உள்ளிட்டப்பட்ட இரு எண்களும் சமமா என்று ஒப்பிட்டுப் பார்த்தல்

@(அ == ஆ) ஆனால்
	பதிப்பி "இரு எண்களும் சமம்!"
இல்லை

## அவற்றில் ஏதேனும் ஒன்று பெரியதா என்று ஒப்பிட்டுப் பார்த்தல்

	@(அ > ஆ) ஆனால்
		பதிப்பி "முதல் எண் பெரியது!"	
	இல்லை
		பதிப்பி "இரண்டாம் எண் பெரியது!"
	முடி
முடி
*************************************

இப்போது, உங்களுக்கு ஒரு பயிற்சி. கீழ்க்காணும் தேவைக்கேற்ப "எழில்" மொழியில் ஒரு நிரல் எழுதுங்கள், ஆங்காங்கே உரிய விளக்கங்களுடன் அது அமையவேண்டும்:

	* இன்று என்ன கிழமை என்று கேட்டுத் தெரிந்துகொள்ளவேண்டும்
	* அது சனி அல்லது ஞாயிறு எனில், விடுமுறை நாளை அனுபவிக்குமாறு வாழ்த்தவேண்டும்

விடை:

*************************************
## இந்த நிரலை எழுதியவர்: கவிதா

## கிழமை உள்ளிடப்படுகிறது

கிழமை = உள்ளீடு("இன்று என்ன கிழமை?")

## இது சனிக்கிழமையா?

@(கிழமை == "சனி") ஆனால்
	பதிப்பி "மகிழ்ச்சி, விடுமுறை நாளை அனுபவியுங்கள்!"
இல்லை
## இது ஞாயிற்றுக்கிழமையா?

	@(கிழமை == "ஞாயிறு") ஆனால்
		பதிப்பி "மகிழ்ச்சி, விடுமுறை நாளை அனுபவியுங்கள்!"
	இல்லை
		பதிப்பி "நன்றி, இந்த நாள் இனிய நாளாகட்டும்!"
	முடி
முடி
*************************************
